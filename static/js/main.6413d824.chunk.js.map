{"version":3,"sources":["app/App.js","components/Buttons/Buttons.js","components/FormulaScreen/FormulaScreen.js","components/Output/Output.js","index.js"],"names":["isOperator","endsWithOperator","endsWithNegativeSign","App","useState","currentVal","setCurrentVal","formula","setFormula","preVal","setPreVal","evaluated","setEvaluated","maxDigitWarning","setTimeout","allClear","handleNumbers","e","includes","value","target","length","test","slice","handleOperators","console","log","handleDecimal","match","handleEvaluate","expression","replace","answer","eval","toString","id","output","numbers","href","Buttons","props","className","onClick","FormulaScreen","Output","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6413d824.chunk.js","sourcesContent":["import Buttons from '../components/Buttons/Buttons';\nimport FormulaScreen from '../components/FormulaScreen/FormulaScreen';\nimport Output from '../components/Output/Output';\nimport './App.css';\nimport { useState } from 'react';\n\n//VARS:\nconst isOperator = /[x+/-]/,\n  endsWithOperator = /[-+x/]$/,\n  endsWithNegativeSign = /\\d[+-x/]?-$/;\nfunction App() {\n  const [currentVal, setCurrentVal] = useState('0');\n  const [formula, setFormula] = useState('');\n  const [preVal, setPreVal] = useState('0');\n  const [evaluated, setEvaluated] = useState(false);\n  function maxDigitWarning() {\n    setCurrentVal('Digit Limit Met');\n    setTimeout(() => setCurrentVal(currentVal), 1000);\n  }\n\n  function allClear() {\n    setCurrentVal('0');\n    setFormula('');\n    setPreVal('0');\n    setEvaluated(false);\n  }\n  function handleNumbers(e) {\n    if (!currentVal.includes('Limit')) {\n      const value = e.target.value;\n      setEvaluated(false);\n      if (currentVal.length > 21) {\n        maxDigitWarning();\n      } else if (evaluated) {\n        setCurrentVal(value);\n        setFormula(value !== '0' ? value : '');\n      } else {\n        setCurrentVal(currentVal === '0' || isOperator.test(currentVal) ? value : currentVal + value);\n        setFormula(currentVal === '0' && value === '0' ? formula === '' ? value : formula : /([^.0-9]0|^0)$/.test(formula) ? formula.slice(0, -1) + value : formula + value);\n      }\n    }\n  }\n\n  function handleOperators(e) {\n    if (!currentVal.includes('Limit')) {\n      const value = e.target.value;\n      setCurrentVal(value);\n      setEvaluated(false);\n      if (evaluated) {\n        setFormula(preVal + value);\n      } else if (!endsWithOperator.test(formula)) {\n        setPreVal(formula);\n        setFormula(formula + value);\n      } else if (!endsWithNegativeSign.test(formula)) {\n        setFormula((endsWithNegativeSign.test(formula + value) ? formula : preVal) + value);\n      } else {\n        console.log(\"End with negative sign.\", formula);\n        endsWithNegativeSign.test(formula + value) ? setFormula(formula + value) : setFormula(value === '-' ? formula : preVal + value);\n      }\n    }\n  }\n\n  function handleDecimal() {\n    if (evaluated) {\n      setCurrentVal('0.');\n      setFormula('0.');\n      setEvaluated(false);\n    } else if (\n      !currentVal.includes('.') &&\n      !currentVal.includes('Limit')\n    ) {\n      setEvaluated(false);\n      if (currentVal.length > 21) {\n        maxDigitWarning();\n      } else if (\n        endsWithOperator.test(formula) ||\n        (currentVal === '0' && formula === '')\n      ) {\n        setCurrentVal('0.');\n        setFormula(formula + '0.');\n      } else {\n        setCurrentVal(formula.match(/(-?\\d+\\.?\\d*)$/)[0] + '.');\n        setFormula(formula + '.');\n      }\n    }\n  }\n\n  function handleEvaluate() {\n    if (!currentVal.includes('Limit')) {\n      let expression = formula;\n      while (endsWithOperator.test(expression)) {\n        expression = expression.slice(0, -1);\n      }\n      expression = expression\n        .replace(/x/g, '*')\n        .replace(/â€‘/g, '-')\n        .replace('--', '+');\n      let answer = '';\n      try {\n        answer = eval(expression).toString();\n      } catch {\n        answer = 'NAN';\n      }\n\n      setCurrentVal(answer);\n      setFormula(formula + `=${answer}`);\n      setPreVal(answer);\n      setEvaluated(true);\n    }\n  }\n  return (\n    <div>\n      <div id=\"calculator\">\n        <FormulaScreen formula={formula} />\n        <Output output={currentVal} />\n        <Buttons\n          numbers={handleNumbers}\n          allClear={allClear}\n          handleDecimal={handleDecimal}\n          handleEvaluate={handleEvaluate}\n          handleOperators={handleOperators}\n        />\n      </div>\n      <div id=\"footer\">\n        Coded by <a href=\"https://github.com/naingnainghtun\">NaingNaingHtun</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import './style.css'\r\nexport default function Buttons(props) {\r\n    return (\r\n        <div className=\"buttons\">\r\n            <button id=\"clear\" value=\"AC\" onClick={props.allClear}>AC</button>\r\n            <button id=\"divide\" className=\"operator\" value=\"/\" onClick={props.handleOperators}>/</button>\r\n            <button id=\"multiply\" className=\"operator\" value=\"x\" onClick={props.handleOperators}>x</button>\r\n            <button id=\"seven\" className=\"number\" value=\"7\" onClick={props.numbers}>7</button>\r\n            <button id=\"eight\" className=\"number\" value=\"8\" onClick={props.numbers}>8</button>\r\n            <button id=\"nine\" className=\"number\" value=\"9\" onClick={props.numbers}>9</button>\r\n            <button id=\"subtract\" className=\"operator\" value=\"-\" onClick={props.handleOperators}>-</button>\r\n            <button id=\"four\" className=\"number\" value=\"4\" onClick={props.numbers}>4</button>\r\n            <button id=\"five\" className=\"number\" value=\"5\" onClick={props.numbers}>5</button>\r\n            <button id=\"six\" className=\"number\" value=\"6\" onClick={props.numbers}>6</button>\r\n            <button id=\"add\" className=\"operator\" value=\"+\" onClick={props.handleOperators}>+</button>\r\n            <button id=\"one\" className=\"number\" value=\"1\" onClick={props.numbers}>1</button>\r\n            <button id=\"two\" className=\"number\" value=\"2\" onClick={props.numbers}>2</button>\r\n            <button id=\"three\" className=\"number\" value=\"3\" onClick={props.numbers}>3</button>\r\n            <button id=\"zero\" className=\"number\" value=\"0\" onClick={props.numbers}>0</button>\r\n            <button id=\"decimal\" onClick={props.handleDecimal} value=\".\">.</button>\r\n            <button id=\"equals\" className=\"operator\" onClick={props.handleEvaluate}>=</button>\r\n        </div>\r\n    );\r\n};\r\n","import './style.css';\r\nexport default function FormulaScreen(props) {\r\n    return (\r\n        <div className=\"formulaScreen\">\r\n            {props.formula}\r\n        </div>\r\n    );\r\n}","import './style.css';\r\nexport default function Output(props) {\r\n    return (\r\n        <div id=\"display\">\r\n            {props.output}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('app')\n);\n"],"sourceRoot":""}